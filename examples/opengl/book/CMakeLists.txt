find_package(GLUT)
function(add_opengl_example NAME)
    add_executable(${NAME} ${ARGN} demo.rc)
    target_link_libraries(${NAME} PRIVATE mgl::mgl)
    target_include_directories(${NAME} PRIVATE "${MGL_SOURCE_DIR}/include")
    if(CMAKE_C_COMPILER MATCHES "^GNU$")
        target_link_libraries(${NAME} PRIVATE m)
    endif()
    if(TARGET glutw32::glutw32)
        target_link_libraries(${NAME} PRIVATE glutw32::glutw32)
    elseif(TARGET GLUT::GLUT)
        target_link_libraries(${NAME} PRIVATE GLUT::GLUT)
    endif()
endfunction()

add_opengl_example(gl_accanti accanti.c)
add_opengl_example(gl_anti anti.c)
add_opengl_example(gl_bezmesh bezmesh.c)
add_opengl_example(gl_checker checker.c)
add_opengl_example(gl_depthcue depthcue.c)
add_opengl_example(gl_dof dof.c)
add_opengl_example(gl_fog fog.c)
add_opengl_example(gl_fogindex fogindex.c)
add_opengl_example(gl_material material.c)
add_opengl_example(gl_mipmap mipmap.c)
add_opengl_example(gl_nurbs nurbs.c)
add_opengl_example(gl_pickdp pickdp.c)
add_opengl_example(gl_plane plane.c)
add_opengl_example(gl_polys polys.c)
add_opengl_example(gl_scclight scclight.c)
add_opengl_example(gl_scene scene.c)
add_opengl_example(gl_sceneba sceneba.c)
add_opengl_example(gl_scenef scenef.c)
add_opengl_example(gl_stencil stencil.c)
add_opengl_example(gl_stroke stroke.c)
add_opengl_example(gl_surface surface.c)
add_opengl_example(gl_teaamb teaamb.c)
add_opengl_example(gl_teapots teapots.c)
add_opengl_example(gl_texture texture.c)
